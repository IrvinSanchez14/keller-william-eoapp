os: linux
dist: xenial

language: node_js
node_js:
  - '12.16.3'

cache:
  directories:
    - '${HOME}/google-cloud-sdk/'
    - '${HOME}/ci-tools/'
    - node_modules # The specified paths are relative to the build directory.
#    - "${HOME}/docker_images/"

# before_script:
# - docker load -i ${HOME}/docker_images/images.tar || true

# before_cache:
# - docker save -o ${HOME}/docker_images/images.tar $(docker images -a -q)

services:
  - docker

addons:
  sonarcloud: true

branches:
  only:
    - master
    - staging
    - develop
    - "/^v\\d+\\.\\d+(\\.\\d+)?(-\\S*)?$/"

env:
  global:
    - COMMIT=${TRAVIS_COMMIT::8}
    - DOCKER_IMAGE_NAME=kc-frontend-eo
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
    - CHART_NAME=kc-frontend-eo
    - CHART_NAMESPACE=kc-frontend
stages:
  - test
  - deploy

jobs:
  include:
    - stage: test
      if: type = pull_request
      name: specs
      cache: yarn
      install: yarn --frozen-lockfile
      script:
        - yarn format
        - yarn build
    - stage: sonarQube
      if: branch IN (develop, master)
      name: 'SonarQube Scan'
      script: sonar-scanner -D sonar.host.url=$SONAR_HOST_URL -D sonar.login=$SONAR_TOKEN -X
    - stage: deploy
      if: branch IN (k8s-deployment-dev, k8s-deployment-staging, k8s-deployment-prod) AND type = push
      name: deploy
      cache: yarn
      before_install:
        - openssl aes-256-cbc -K $encrypted_3b9f0b9d36d1_key -iv $encrypted_3b9f0b9d36d1_iv -in secrets.tar.enc -out secrets.tar -d
        - tar xvf secrets.tar -C /home/travis
      install: yarn --frozen-lockfile
      script:
        - |
          if [[ $TRAVIS_BRANCH  == "k8s-deployment-dev" && $TRAVIS_PULL_REQUEST == "false" ]]; then
            yarn format
            ENVIRONMENT=development yarn export:sitemap
            export S3_BUCKET="new-eo-dev.kellercovered.io"
          fi
          if [[ $TRAVIS_BRANCH  == "k8s-deployment-staging" && $TRAVIS_PULL_REQUEST == "false" ]]; then
            yarn format
            ENVIRONMENT=staging yarn export:sitemap
            export S3_BUCKET="new-eo-stg.kellercovered.io"
          fi
          if [[ $TRAVIS_BRANCH  == "k8s-deployment-prod" && $TRAVIS_PULL_REQUEST == "false" ]]; then
            yarn format
            ENVIRONMENT=production yarn export:sitemap
            export S3_BUCKET="eo.kellercovered.com"
          fi
      deploy:
        on:
          branch:
            - k8s-deployment-dev
            - k8s-deployment-staging
            - k8s-deployment-prod
        provider: s3
        access_key_id: $AWS_ACCESS_KEY_ID
        secret_access_key: $AWS_SECRET_ACCESS_KEY
        bucket: $S3_BUCKET
        skip_cleanup: true
        local_dir: out
        region: us-east-2
