{
  "v": "5.6.2",
  "fr": 30,
  "ip": 354,
  "op": 590,
  "w": 830,
  "h": 1514,
  "nm": "phone",
  "ddd": 0,
  "assets": [
    {
      "id": "image_0",
      "w": 354,
      "h": 72,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_0.png",
      "e": 0
    },
    {
      "id": "image_1",
      "w": 580,
      "h": 1262,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_1.png",
      "e": 0
    },
    {
      "id": "image_2",
      "w": 562,
      "h": 162,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_2.png",
      "e": 0
    },
    {
      "id": "image_3",
      "w": 562,
      "h": 162,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_3.png",
      "e": 0
    },
    {
      "id": "image_4",
      "w": 562,
      "h": 162,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_4.png",
      "e": 0
    },
    {
      "id": "image_5",
      "w": 562,
      "h": 162,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_5.png",
      "e": 0
    },
    {
      "id": "image_6",
      "w": 562,
      "h": 162,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_6.png",
      "e": 0
    },
    {
      "id": "image_7",
      "w": 562,
      "h": 162,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_7.png",
      "e": 0
    },
    {
      "id": "image_8",
      "w": 562,
      "h": 162,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_8.png",
      "e": 0
    },
    {
      "id": "image_9",
      "w": 580,
      "h": 338,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_9.png",
      "e": 0
    },
    {
      "id": "image_10",
      "w": 338,
      "h": 42,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_10.png",
      "e": 0
    },
    {
      "id": "image_11",
      "w": 286,
      "h": 62,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_11.png",
      "e": 0
    },
    {
      "id": "image_12",
      "w": 830,
      "h": 1514,
      "u": "static/img/phoneAnimationImgs/",
      "p": "img_12.png",
      "e": 0
    },
    {
      "id": "comp_0",
      "layers": [
        {
          "ddd": 0,
          "ind": 1,
          "ty": 2,
          "nm": "nationwide-quote.png",
          "cl": "png",
          "refId": "image_2",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 365,
                  "s": [403, 3023.333, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 391,
                  "s": [403, 2043.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 425,
                  "s": [403, 2043.333, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 442,
                  "s": [403, 1989.333, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 474,
                  "s": [403, 1989.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 491,
                  "s": [403, 1837.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 522,
                  "s": [403, 1837.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 539,
                  "s": [403, 1689.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 571,
                  "s": [403, 1689.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 604, "s": [-259, 1689.333, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
          },
          "ao": 0,
          "ip": 29,
          "op": 5476,
          "st": 29,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 2,
          "ty": 2,
          "nm": "metlife-quote.png",
          "cl": "png",
          "refId": "image_3",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 364,
                  "s": [403, 2874, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 390,
                  "s": [403, 1894, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 424,
                  "s": [403, 1894, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 441,
                  "s": [403, 1840, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 473,
                  "s": [403, 1840, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 490,
                  "s": [403, 1688, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 521,
                  "s": [403, 1688, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 538,
                  "s": [403, 1540, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 570,
                  "s": [403, 1540, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 603, "s": [-259, 1540, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
          },
          "ao": 0,
          "ip": 26.0009765625,
          "op": 5473.0009765625,
          "st": 26.0009765625,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 3,
          "ty": 2,
          "nm": "travelers-quote.png",
          "cl": "png",
          "refId": "image_4",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 363,
                  "s": [403, 2724.667, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 389,
                  "s": [403, 1744.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 423,
                  "s": [403, 1744.667, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 440,
                  "s": [403, 1690.667, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 472,
                  "s": [403, 1690.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 489,
                  "s": [403, 1538.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 520,
                  "s": [403, 1538.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 537,
                  "s": [403, 1390.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 569,
                  "s": [403, 1390.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 602, "s": [-259, 1390.667, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
          },
          "ao": 0,
          "ip": 22.9990234375,
          "op": 5469.9990234375,
          "st": 22.9990234375,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 4,
          "ty": 2,
          "nm": "progressive-quote.png",
          "cl": "png",
          "refId": "image_5",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 362,
                  "s": [403, 2575.333, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 388,
                  "s": [403, 1595.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 422,
                  "s": [403, 1595.333, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 439,
                  "s": [403, 1541.333, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 471,
                  "s": [403, 1541.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 488,
                  "s": [403, 1389.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 519,
                  "s": [403, 1389.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 536,
                  "s": [403, 1241.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 568,
                  "s": [403, 1241.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 601, "s": [-259, 1241.333, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
          },
          "ao": 0,
          "ip": 20,
          "op": 5467,
          "st": 20,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 5,
          "ty": 2,
          "nm": "nationwide-2-quote.png",
          "cl": "png",
          "refId": "image_6",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 361,
                  "s": [403, 2426, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 387,
                  "s": [403, 1446, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 421,
                  "s": [403, 1446, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 438,
                  "s": [403, 1392, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 470,
                  "s": [403, 1392, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 487,
                  "s": [403, 1240, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 518,
                  "s": [403, 1240, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 535,
                  "s": [403, 1092, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 567,
                  "s": [403, 1092, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 600, "s": [-259, 1092, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
          },
          "ao": 0,
          "ip": 18,
          "op": 5465,
          "st": 18,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 6,
          "ty": 2,
          "nm": "safeco-quote.png",
          "cl": "png",
          "refId": "image_7",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 360,
                  "s": [403, 2276.667, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 386,
                  "s": [403, 1296.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 420,
                  "s": [403, 1296.667, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 437,
                  "s": [403, 1242.667, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 469,
                  "s": [403, 1242.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 486,
                  "s": [403, 1090.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 517,
                  "s": [403, 1090.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 534,
                  "s": [403, 942.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 566,
                  "s": [403, 942.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 599, "s": [-259, 942.667, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
          },
          "ao": 0,
          "ip": 16,
          "op": 5463,
          "st": 16,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 7,
          "ty": 2,
          "nm": "nationwide-quote.png",
          "cl": "png",
          "refId": "image_2",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 359,
                  "s": [403, 2127.333, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 385,
                  "s": [403, 1147.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 419,
                  "s": [403, 1147.333, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 436,
                  "s": [403, 1093.333, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 468,
                  "s": [403, 1093.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 485,
                  "s": [403, 941.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 516,
                  "s": [403, 941.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 533,
                  "s": [403, 793.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 565,
                  "s": [403, 793.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 598, "s": [-259, 793.333, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
          },
          "ao": 0,
          "ip": 14,
          "op": 5461,
          "st": 14,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 8,
          "ty": 2,
          "nm": "metlife-quote.png",
          "cl": "png",
          "refId": "image_3",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 358,
                  "s": [403, 1978, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 384,
                  "s": [403, 998, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 418,
                  "s": [403, 998, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 435,
                  "s": [403, 944, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 467,
                  "s": [403, 944, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 484,
                  "s": [403, 792, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 515,
                  "s": [403, 792, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 532,
                  "s": [403, 644, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 564,
                  "s": [403, 644, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 597, "s": [-259, 644, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
          },
          "ao": 0,
          "ip": 12,
          "op": 5459,
          "st": 12,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 9,
          "ty": 2,
          "nm": "travelers-quote.png",
          "cl": "png",
          "refId": "image_4",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 357,
                  "s": [403, 1828.667, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 383,
                  "s": [403, 848.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 417,
                  "s": [403, 848.667, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 434,
                  "s": [403, 794.667, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 466,
                  "s": [403, 794.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 483,
                  "s": [403, 642.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 514,
                  "s": [403, 642.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 531,
                  "s": [403, 494.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 563,
                  "s": [403, 494.667, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 596, "s": [-259, 494.667, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
          },
          "ao": 0,
          "ip": 10,
          "op": 619,
          "st": 10,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 10,
          "ty": 2,
          "nm": "progressive-quote.png",
          "cl": "png",
          "refId": "image_5",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 356,
                  "s": [403, 1679.333, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 382,
                  "s": [403, 699.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 416,
                  "s": [403, 699.333, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 9, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 433,
                  "s": [403, 645.333, 0],
                  "to": [0, -9, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 465,
                  "s": [403, 645.333, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 482, "s": [403, 493.333, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": {
              "a": 1,
              "k": [
                {
                  "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
                  "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
                  "t": 513,
                  "s": [100, 100, 100]
                },
                { "t": 530, "s": [50, 50, 100] }
              ],
              "ix": 6
            }
          },
          "ao": 0,
          "ip": 8,
          "op": 519,
          "st": 8,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 11,
          "ty": 2,
          "nm": "lemonade-quote.png",
          "cl": "png",
          "refId": "image_8",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": {
              "a": 1,
              "k": [
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 355,
                  "s": [403, 1530, 0],
                  "to": [0, -163.333, 0],
                  "ti": [0, 163.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 381,
                  "s": [403, 550, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 415,
                  "s": [403, 550, 0],
                  "to": [0, -9.333, 0],
                  "ti": [0, 9.333, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 432,
                  "s": [403, 494, 0],
                  "to": [0, -9.333, 0],
                  "ti": [0, 0, 0]
                },
                {
                  "i": { "x": 0.833, "y": 0.833 },
                  "o": { "x": 0.167, "y": 0.167 },
                  "t": 512,
                  "s": [403, 494, 0],
                  "to": [0, 0, 0],
                  "ti": [0, 0, 0]
                },
                { "t": 529, "s": [403, 346, 0] }
              ],
              "ix": 2,
              "x": "var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return $bm_sum($bm_mul(c, $bm_sum($bm_mul($bm_mul(t = t / d - 1, t), $bm_sum($bm_mul($bm_sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": { "a": 0, "k": [281, 81, 0], "ix": 1 },
            "s": {
              "a": 1,
              "k": [
                {
                  "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
                  "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
                  "t": 464,
                  "s": [100, 100, 100]
                },
                { "t": 481, "s": [50, 50, 100] }
              ],
              "ix": 6
            }
          },
          "ao": 0,
          "ip": 6,
          "op": 469,
          "st": 6,
          "bm": 0
        }
      ]
    }
  ],
  "layers": [
    {
      "ddd": 0,
      "ind": 1,
      "ty": 4,
      "nm": "Shape Layer 6",
      "td": 1,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [415, 749, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "d": 1,
              "ty": "el",
              "s": { "a": 0, "k": [620.898, 620.898], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "nm": "Ellipse Path 1",
              "mn": "ADBE Vector Shape - Ellipse",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0.960784912109, 0, 0.003936767578, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 512,
                    "s": [-12.551, 19.449],
                    "to": [0, -75.783],
                    "ti": [0, 75.783]
                  },
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 529,
                    "s": [-12.551, -435.246],
                    "to": [0, 0],
                    "ti": [0, 0]
                  },
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 563,
                    "s": [-12.551, -435.246],
                    "to": [-120, 0],
                    "ti": [120, 0]
                  },
                  { "t": 580, "s": [-732.551, -435.246] }
                ],
                "ix": 2,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                    "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                    "t": 512,
                    "s": [65, 65]
                  },
                  { "t": 529, "s": [110, 110] }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Ellipse 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 5400,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 2,
      "ty": 2,
      "nm": "Travelers-type.png",
      "cl": "png",
      "tt": 1,
      "refId": "image_0",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 512,
              "s": [404, 402, 0],
              "to": [0, -22.333, 0],
              "ti": [0, 22.333, 0]
            },
            { "t": 529, "s": [404, 268, 0] }
          ],
          "ix": 2,
          "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
        },
        "a": { "a": 0, "k": [177, 36, 0], "ix": 1 },
        "s": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 512,
              "s": [69, 69, 100]
            },
            { "t": 529, "s": [100, 100, 100] }
          ],
          "ix": 6,
          "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
        }
      },
      "ao": 0,
      "ip": -2,
      "op": 5398,
      "st": -2,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 3,
      "ty": 2,
      "nm": "phone-mask.png",
      "cl": "png",
      "td": 1,
      "refId": "image_1",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [403, 745, 0], "ix": 2 },
        "a": { "a": 0, "k": [290, 631, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "ip": 0,
      "op": 5400,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 4,
      "ty": 0,
      "nm": "Pre-comp 1",
      "tt": 1,
      "refId": "comp_0",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [415, 757, 0], "ix": 2 },
        "a": { "a": 0, "k": [415, 757, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "w": 830,
      "h": 1514,
      "ip": 0,
      "op": 5400,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 5,
      "ty": 2,
      "nm": "lemonade-headie.png",
      "cl": "png",
      "td": 1,
      "refId": "image_9",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [404, 282, 0], "ix": 2 },
        "a": { "a": 0, "k": [290, 169, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "ip": 0,
      "op": 5400,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 6,
      "ty": 4,
      "nm": "Shape Layer 5",
      "tt": 1,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [415, 749, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "d": 1,
              "ty": "el",
              "s": { "a": 0, "k": [620.898, 620.898], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "nm": "Ellipse Path 1",
              "mn": "ADBE Vector Shape - Ellipse",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0.960784912109, 0, 0.003936767578, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 512,
                    "s": [-12.551, 19.449],
                    "to": [0, -75.783],
                    "ti": [0, 75.783]
                  },
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 529,
                    "s": [-12.551, -435.246],
                    "to": [0, 0],
                    "ti": [0, 0]
                  },
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 563,
                    "s": [-12.551, -435.246],
                    "to": [-120, 0],
                    "ti": [120, 0]
                  },
                  { "t": 580, "s": [-732.551, -435.246] }
                ],
                "ix": 2,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                    "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                    "t": 512,
                    "s": [65, 65]
                  },
                  { "t": 529, "s": [110, 110] }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Ellipse 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 5400,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 7,
      "ty": 4,
      "nm": "Shape Layer 4",
      "td": 1,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [415, 749, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "d": 1,
              "ty": "el",
              "s": { "a": 0, "k": [620.898, 620.898], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "nm": "Ellipse Path 1",
              "mn": "ADBE Vector Shape - Ellipse",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0.141174316406, 0.501953125, 0.99609375, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 464,
                    "s": [-12.551, 19.449],
                    "to": [0, -75.783],
                    "ti": [0, 75.783]
                  },
                  { "t": 481, "s": [-12.551, -435.246] }
                ],
                "ix": 2,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                    "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                    "t": 464,
                    "s": [65, 65]
                  },
                  { "t": 481, "s": [110, 110] }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Ellipse 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 561,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 8,
      "ty": 2,
      "nm": "progressive-type.png",
      "cl": "png",
      "tt": 1,
      "refId": "image_10",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 464,
              "s": [404, 402, 0],
              "to": [0, -20, 0],
              "ti": [0, 20, 0]
            },
            { "t": 481, "s": [404, 282, 0] }
          ],
          "ix": 2,
          "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
        },
        "a": { "a": 0, "k": [169, 21, 0], "ix": 1 },
        "s": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 464,
              "s": [69, 69, 100]
            },
            { "t": 481, "s": [100, 100, 100] }
          ],
          "ix": 6,
          "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
        }
      },
      "ao": 0,
      "ip": 0,
      "op": 561,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 9,
      "ty": 2,
      "nm": "lemonade-headie.png",
      "cl": "png",
      "td": 1,
      "refId": "image_9",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [404, 282, 0], "ix": 2 },
        "a": { "a": 0, "k": [290, 169, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "ip": 0,
      "op": 561,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 10,
      "ty": 4,
      "nm": "Shape Layer 3",
      "tt": 1,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [415, 749, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "d": 1,
              "ty": "el",
              "s": { "a": 0, "k": [620.898, 620.898], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "nm": "Ellipse Path 1",
              "mn": "ADBE Vector Shape - Ellipse",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0.141174316406, 0.501953125, 0.99609375, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 464,
                    "s": [-12.551, 19.449],
                    "to": [0, -75.783],
                    "ti": [0, 75.783]
                  },
                  { "t": 481, "s": [-12.551, -435.246] }
                ],
                "ix": 2,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                    "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                    "t": 464,
                    "s": [65, 65]
                  },
                  { "t": 481, "s": [110, 110] }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Ellipse 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 561,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 11,
      "ty": 4,
      "nm": "Shape Layer 2",
      "td": 1,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [415, 749, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "d": 1,
              "ty": "el",
              "s": { "a": 0, "k": [620.898, 620.898], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "nm": "Ellipse Path 1",
              "mn": "ADBE Vector Shape - Ellipse",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [1, 0, 0.509796142578, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 415,
                    "s": [-12.551, 19.449],
                    "to": [0, -75.783],
                    "ti": [0, 75.783]
                  },
                  { "t": 432, "s": [-12.551, -435.246] }
                ],
                "ix": 2,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                    "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                    "t": 415,
                    "s": [65, 65]
                  },
                  { "t": 432, "s": [110, 110] }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Ellipse 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 561,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 12,
      "ty": 2,
      "nm": "lemonade-type.png",
      "cl": "png",
      "tt": 1,
      "refId": "image_11",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 415,
              "s": [404, 402, 0],
              "to": [0, -20, 0],
              "ti": [0, 20, 0]
            },
            { "t": 432, "s": [404, 282, 0] }
          ],
          "ix": 2,
          "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
        },
        "a": { "a": 0, "k": [143, 31, 0], "ix": 1 },
        "s": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 415,
              "s": [69, 69, 100]
            },
            { "t": 432, "s": [100, 100, 100] }
          ],
          "ix": 6,
          "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
        }
      },
      "ao": 0,
      "ip": 0,
      "op": 561,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 13,
      "ty": 2,
      "nm": "lemonade-headie.png",
      "cl": "png",
      "td": 1,
      "refId": "image_9",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [404, 282, 0], "ix": 2 },
        "a": { "a": 0, "k": [290, 169, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "ip": 0,
      "op": 561,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 14,
      "ty": 4,
      "nm": "Shape Layer 1",
      "tt": 1,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [415, 749, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "d": 1,
              "ty": "el",
              "s": { "a": 0, "k": [620.898, 620.898], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "nm": "Ellipse Path 1",
              "mn": "ADBE Vector Shape - Ellipse",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [1, 0, 0.509796142578, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 415,
                    "s": [-12.551, 19.449],
                    "to": [0, -75.783],
                    "ti": [0, 75.783]
                  },
                  { "t": 432, "s": [-12.551, -435.246] }
                ],
                "ix": 2,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                    "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                    "t": 415,
                    "s": [65, 65]
                  },
                  { "t": 432, "s": [110, 110] }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nfunction easeandwizz_outExpo(t, b, c, d) {\n    var OUT_EXPO_CORRECTION = 1.000976;\n    return t == d ? b + c : c * OUT_EXPO_CORRECTION * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key($bm_sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = $bm_sub(time, key1.time);\n    d = $bm_sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = $bm_sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = $bm_sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = $bm_sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outExpo(t, sY, eY, d);\n            val3 = easeandwizz_outExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"
              },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Ellipse 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 561,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 15,
      "ty": 2,
      "nm": "phone.png",
      "cl": "png",
      "refId": "image_12",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [415, 757, 0], "ix": 2 },
        "a": { "a": 0, "k": [415, 757, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "ip": 0,
      "op": 5400,
      "st": 0,
      "bm": 0
    }
  ],
  "markers": []
}
